# Source: docker-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: jx
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    release: docker-registry
    heritage: Helm
    gitops.jenkins-x.io/pipeline: 'namespaces'
  annotations:
    meta.helm.sh/release-name: 'docker-registry'
    wave.pusher.com/update-on-config-change: 'true'
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: docker-registry
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: docker-registry
      annotations:
        checksum/config: 8c9a66051bfb62d554d483693a0c083c845d1fb7a6a4cfad4e244df134eb7bdc
        checksum/secret: 7c12df6da2907ab5e5211396ecf8fe3d164bd4c31e9e97c14fc38c6b9e8f1465
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: docker-registry
        image: "registry:2.8.1"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/registry
        - serve
        - /etc/docker/registry/config.yml
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /
            port: 5000
        readinessProbe:
          httpGet:
            path: /
            port: 5000
        resources: {}
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: docker-registry-secret
              key: haSharedSecret
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: "/var/lib/registry"
        volumeMounts:
        - name: "docker-registry-config"
          mountPath: "/etc/docker/registry"
        - name: data
          mountPath: /var/lib/registry/
      volumes:
      - name: docker-registry-config
        configMap:
          name: docker-registry-config
      - name: data
        emptyDir: {}
